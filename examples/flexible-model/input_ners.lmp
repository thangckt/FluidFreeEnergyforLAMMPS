# This script performs NERS procedure to compute the classical Helmholtz free-energy depedence of temperature of q-SPC/Fw fluid.
 

label RESTART

######################################     General Variables     #######################################
# Initalizes random number generator.
  variable        rnd        equal   round(random(0,999999,${RANDOM}))

# Simulation variables.
  variable        T          equal   255              # Simulation temperature (K).
  variable        T          equal   270              # Target temperature (K).
  variable        dt         equal   0.1              # Timestep (fs).
  variable        damp_T     equal   100*${dt}        # Thermostat damp parameter (fs).
  variable        t_eq       equal   400000           # Equilibration steps.
  variable        t_s        equal   7500000          # Switching steps.

# Potencial parameters.
  variable        eps_lj     equal   0.1554           # LJ epsilon parameter (kcal/mol).
  variable        sig_lj     equal   3.1655           # LJ sigma parameter (Angstrons).
  variable        rc_lj      equal   9.0              # LJ cutoff radius (Angstrons).
  variable        acc        equal   1.0e-6           # Kspace accuracy.

  variable        r_eq       equal   1.0000           # Equilibrium bond length (Angstrons).
  variable        K_r        equal   529.581          # Bond harmonic spring constant (kcal/mol.A^2).
  variable        theta_eq   equal   112.0            # Equilibrium angle position (Degrees). 
  variable        K_theta    equal   37.95            # Angle harmonic Spring constant (kcal/mol.rad^2).

# Thermodynamic integration variables.
  variable        li         equal   1.0              # Initial lambda.
  variable        lf         equal   $T/${Tf}         # Final lambda.
  variable        N_sim      loop    5                # Number of independent simulations.
#------------------------------------------------------------------------------------------------------#


########################################     Atomic setup     ##########################################
# Defines the style of atoms, units and boundary conditions.
  atom_style      full
  units           real
  boundary        p p p

# Read atoms positions, velocities and box parameters.
  read_data       data_init.dat

  neighbor        2.0 bin
  neigh_modify    every 1 delay 5 check yes

  timestep        ${dt}

# Define q-SPC/Fw potential.
  pair_style      lj/cut/coul/long ${rc_lj}
  pair_coeff      1 1 ${eps_lj} ${sig_lj}
  pair_coeff      1 2 0.0 0.0
  pair_coeff      2 2 0.0 0.0

# Define bond and angle potentials.
  bond_style      harmonic
  bond_coeff      1 ${K_r} ${r_eq}

  angle_style     harmonic
  angle_coeff     1 ${K_theta} ${theta_eq}

# Define long-range solver.
  kspace_style    pppm ${acc}
#------------------------------------------------------------------------------------------------------#


################################     Fixes, computes and constraints     ###############################
# Integrator & thermostat.
  fix             f1 all nve
  fix             f2 all langevin $T $T ${damp_T} ${rnd}
  variable        rnd equal round(random(0,999999,0))             # Generates new rnd #.
#------------------------------------------------------------------------------------------------------#


##########################################     Output setup     ########################################
# Output variables.
  variable        dU   equal c_thermo_pe*3.0/atoms                # Driving-force during NERS procedure.
  variable        step equal step

  thermo          1000 
  thermo_style    custom step v_dU
#------------------------------------------------------------------------------------------------------#


##########################################     Run simulation     ######################################
# Equilibrate the fluid with li = 1.0 and switch to lf = $T/${Tf} (Forward realization).
  run             ${t_eq}

  print           "${dU} ${li}" file data2/forward_${N_sim}.dat
  variable        lambda equal ramp(${li},${lf})
  fix             f3 all adapt 1 pair lj/cut/coul/long fscale * * v_lambda &
                  bond harmonic fscale * v_lambda &
                  angle harmonic fscale * v_lambda &
                  kspace v_lambda fscale yes
  fix             f4 all print 1 "${dU} ${lambda}" &
                  title "# dU lambda" screen no       &
                  append data2/forward_${N_sim}.dat

  run             ${t_s}

  unfix           f3
  unfix           f4


  kspace_style    pppm ${acc} ${lf}

# Equilibrate the fluid with lf = $T/${Tf} and switch to li = 1.0 (Backward realization).
  run             ${t_eq}

  print           "${dU} ${lf}" file data2/backward_${N_sim}.dat
  variable        lambda equal ramp(${lf},${li})
  fix             f3 all adapt 1 pair lj/cut/coul/long fscale * * v_lambda &
                  bond harmonic fscale * v_lambda &
                  angle harmonic fscale * v_lambda &
                  kspace v_lambda fscale yes
  fix             f4 all print 1 "${dU} ${lambda}" &
                  title "# dU lambda" screen no       &
                  append data2/backward_${N_sim}.dat

  run             ${t_s}

  unfix           f3
  unfix           f4
#------------------------------------------------------------------------------------------------------#


##########################################     Loop procedure     ######################################
  next N_sim
  clear
  jump input_ners.lmp RESTART
#------------------------------------------------------------------------------------------------------#

